{"ast":null,"code":"// import { HttpClient, HttpEventType } from '@angular/common/http';\n// import { Component, OnInit } from '@angular/core';\n// import { Router, ActivatedRoute } from '@angular/router';\n// import { FormBuilder, FormGroup, Validators,AbstractControl,ValidatorFn, ValidationErrors } from '@angular/forms';\n// import { first } from 'rxjs/operators';\n// import { User } from '../_models';\n// import { AccountService, AlertService } from '../_services';\n//\n// @Component({\n//   selector: 'photo-root',\n//   templateUrl: './photo.component.html',\n// })\n//\n// export class PhotoComponent implements OnInit {\n//     user: User | null;\n//\n//   constructor(\n//   private httpClient: HttpClient,\n// private accountService: AccountService\n//   ) {\n//    this.user = this.accountService.userValue;\n// }\n//\n//   selectedFile: File;\n//   imgURL: any;\n//   retrievedImage: any;\n//   base64Data: any;\n//   retrieveResonse: any;\n//   message: string;\n//   imageName: any;\n//   userId: number = 3;\n//\n//   public onFileChanged(event) {\n//     //Select File\n//     this.selectedFile = event.target.files[0];\n//   }\n//\n// ngOnInit(): void {\n//     // Call getImage() when the component initializes\n//     this.getImage();\n//   }\n//\n//   onUpload() {\n//     console.log(this.selectedFile);\n//     const uploadImageData = new FormData();\n//     uploadImageData.append('imageFile', this.selectedFile, this.selectedFile.name);\n//\n//\n//     this.httpClient.post('http://localhost:8080/image/upload', uploadImageData, { observe: 'response' })\n//       .subscribe((response) => {\n//         if (response.status === 200) {\n//           this.message = 'Image uploaded successfully';\n//         } else {\n//           this.message = 'Image not uploaded successfully';\n//         }\n//       }\n//       );\n//\n//\n//   }\n//\n//   getImage() {\n//     this.httpClient.get('http://localhost:8080/image/get/' + this.userId)\n//       .subscribe(\n//         res => {\n//           this.retrieveResonse = res;\n//           this.base64Data = this.retrieveResonse.picByte;\n//           this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n//         }\n//       );\n//   }\n// }","map":null,"metadata":{},"sourceType":"script"}